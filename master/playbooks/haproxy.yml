---
- name: "Playbook to install HAproxy"
  hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    installation_type: "{{ installattion_type }}"

  tasks:

    - name: "Install HAproxy"
      yum:
        name: "haproxy"
        state: present

    - name: "Create and configure 'haproxy.cfg' for a server installation"
      when: installation_type == "server"
      copy:
        force: yes
        dest: /etc/haproxy/haproxy.cfg
        content: |
          global
              user    haproxy
              group   haproxy
              nbproc  1
              maxconn 50000

          defaults
              mode http
              timeout connect 5000ms
              timeout client 50000ms
              timeout server 50000ms
              log global
              option httplog

          frontend ft_web
              bind 0.0.0.0:80
              default_backend bk_web

          backend bk_web
              balance roundrobin
              cookie JSESSIONID prefix nocache
              server node1 Node1:8080 check cookie node1

          listen stats
              bind *:9000
              stats enable
              stats uri /
              stats refresh 5s

    - name: "Create and configure 'haproxy.cfg' for a datacenter installation"
      when: installation_type == "datacenter"
      copy:
        force: yes
        dest: /etc/haproxy/haproxy.cfg
        content: |
          global
              user    haproxy
              group   haproxy
              nbproc  1
              maxconn 50000

          defaults
              mode http
              timeout connect 5000ms
              timeout client 50000ms
              timeout server 50000ms
              log global
              option httplog

          frontend ft_web
              bind 0.0.0.0:80
              default_backend bk_web

          backend bk_web
              balance roundrobin
              cookie JSESSIONID prefix nocache
              server node1 Node1:8080 check cookie node1
              server node2 Node2:8080 check cookie node2

          listen stats
              bind *:9000
              stats enable
              stats uri /
              stats refresh 5s

    - name: "Start service haproxy, if not started"
      service:
        name: haproxy
        state: restarted
